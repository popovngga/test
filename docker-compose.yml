version: '3.8'

services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
            args:
                USER_UID: ${USER_UID:-1001}
                USER_GID: ${USER_GID:-1001}
        container_name: app
        restart: unless-stopped
        ports:
            - "5173:5173"
        env_file:
            - .env
        volumes:
            - ./:/var/www/html
            - /var/www/html/node_modules
            - /var/www/html/vendor
        depends_on:
            - mysql
            - redis
        networks:
            - network

    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "8000:80"
        volumes:
            - ./:/var/www/html
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
        depends_on:
            - app
        networks:
            - network

    mysql:
        image: mysql:8.0
        container_name: mysql
        restart: unless-stopped
        env_file:
            - .env
        environment:
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_ALLOW_EMPTY_PASSWORD: "no"
        ports:
            - "${DB_PORT:-3306}:3306"
        volumes:
            - mysql-data:/var/lib/mysql
            - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf:ro
        security_opt:
            - no-new-privileges:true
        networks:
            - network

    redis:
        image: redis:7
        container_name: redis
        restart: unless-stopped
        command: redis-server --save 60 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
        volumes:
            - redis-data:/data
        security_opt:
            - no-new-privileges:true
        ports:
            - "${REDIS_PORT:-6379}:6379"
        networks:
            - network

networks:
    network:
        driver: bridge

volumes:
    mysql-data:
        driver: local
    redis-data:
        driver: local

